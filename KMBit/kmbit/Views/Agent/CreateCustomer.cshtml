@model KMBit.Models.CreateCustomerModel

@{
    if(Model==null || Model.Id<=0)
    {
        ViewBag.Title = "新建客户";
    }else
    {
        ViewBag.Title = "修改客户";
    }

    Layout =Request.IsAjaxRequest()?null: "~/Views/Shared/_Layout_Agent.cshtml";
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("SaveCustomer", "Agent", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreditAmount)
    @Html.HiddenFor(model => model.Amount)
    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Id <= 0)
                {
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }
                
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OpenType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@if (Model.Id <= 0)
                {
                    @Html.DropDownListFor(model => model.OpenType, (SelectList)ViewBag.OpenTypes, "--公众号类型--", new { @class = "form-control" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.OpenType, (SelectList)ViewBag.OpenTypes, "--公众号类型--", new { @class = "form-control", @disabled = "disabled" })
                }*@
                @Html.DropDownListFor(model => model.OpenType, (SelectList)ViewBag.OpenTypes, "--公众号类型--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OpenType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OpenAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OpenAccount, new { htmlAttributes = new { @class = "form-control" } })
                @*@if (Model.Id <= 0)
                {                   
                    @Html.EditorFor(model => model.OpenAccount, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    if (!string.IsNullOrEmpty(Model.OpenAccount))
                    {
                        @Html.EditorFor(model => model.OpenAccount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.OpenAccount, new { htmlAttributes = new { @class = "form-control"} })
                    }
                }*@
                
                @Html.ValidationMessageFor(model => model.OpenAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ContactPeople, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactPeople, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactPeople, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.Exception != null)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <p style="color:red;">@Html.Raw(((Exception)ViewBag.Exception).Message)</p>
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="保存" class="btn btn-default btn-primary" />
            </div>
        </div>
    </div>
}

